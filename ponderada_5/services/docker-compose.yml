name: baeldung

services:
  grafana:
    extends:
      file: telemetry/docker-compose-telemetry.yml
      service: grafana
    networks:
      - monitoring
  
  prometheus:
    extends:
      file: telemetry/docker-compose-telemetry.yml
      service: prometheus
    networks:
      - monitoring
      - system
      - rabbitmq

  redis: 
    image: redis:latest
    container_name: redis
    env_file:
      - .env
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT: 6379
      REDIS_DATABASES: 2
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 15s
      retries: 5

  mysql:
    image: mysql:latest
    container_name: mysql
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - 3306:3306
    volumes:
      - ../volumes/mysql:/var/lib/mysql
    networks:
      - system
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 5s

  rabbit:
    image: cmtabr/rabbitmq
    container_name: rabbit
    build: 
      context: rabbitmq
      dockerfile: Dockerfile
    ports:
      - "15672:15672"
    volumes:
      - ../volumes/rabbitmq:/var/lib/rabbitmq
      - ../volumes/rabbitmq/log:/var/log/rabbitmq
    command: rabbitmq-server
    networks:
      - system
      - rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 3s


  # auth:
  #   image: baeldung/auth
  #   container_name: auth
  #   build: 
  #     context: auth
  #     dockerfile: Dockerfile
  #   command: uvicorn main:app --host 0.0.0.0 --port 5000
  #   restart: on-failure
  #   ports: 
  #     - "5000:5000"
  #   networks:
  #     - system
  #   depends_on:
  #     - prometheus
  #     - mysql
  #     - rabbit
  #   healthcheck:
  #     test: ["CMD", "curl", "-X", "GET", "http://auth:5000/api/v1/healthcheck"]
  #     interval: 30s
  #     timeout: 30s
  #     retries: 5
  #     start_period: 3s

  # image_processing:
  #   image: baeldung/image-processing
  #   container_name: image_processing
  #   build: 
  #     context: image_processing
  #     dockerfile: Dockerfile
  #   command: uvicorn main:app --host 0.0.0.0 --port 5001
  #   restart: on-failure
  #   ports:
  #     - "5001:5001"
  #   networks:
  #     - system
  #     - rabbitmq
  #   depends_on:
  #     - prometheus
  #     - mysql
  #     - rabbit
  #   healthcheck:
  #     test: ["CMD", "curl", "-X", "GET", "http://image_processing:5001/api/v1/healthcheck"]
  #     interval: 30s
  #     timeout: 30s
  #     retries: 5
  #     start_period: 3s

  # nginx:
  #   image: baeldung/nginx
  #   container_name: nginx
  #   build: 
  #     context: nginx
  #     dockerfile: Dockerfile
  #   restart: always
  #   ports:
  #     - "3000:80"
  #   volumes:
  #     - nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #   networks:
  #     - system

  # workers:
  #   image: baeldung/worker
  #   container_name: workers
  #   build: 
  #     context: workers
  #     dockerfile: Dockerfile
  #   networks:
  #     - system
  #     - rabbitmq
  #   depends_on:
  #     - prometheus
  #     - mysql
  #     - rabbit

networks:
  monitoring:
    driver: bridge
  system:
    driver: bridge
  rabbitmq:
    driver: bridge